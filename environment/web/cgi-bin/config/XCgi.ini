; コマンド定義
;
;[Section] : 指定API (/api/<指定API>)
;  Key      : 各API任意キー


[env]
Service = mcock
BasicSubsystemFile = /ini/BasicSubSystem.ini
BasicSystemFile = /ini/BasicSystem.ini
SystemId = ___SYSTEM_ID___
TreeId = ___TREE_ID___
Phase = development
Product = mcock
Pool = /web/cgi-work/pool
Employee = /web/cgi-work/employee
Resource = /web/cgi-bin/resource

[aws]
Account = 401978756792
LambdaCreateFunction = aws lambda create-function --region ap-northeast-1 --function-name %s --role %s --handler %s --runtime python3.7 --code %s --timeout %d
LambdaGetFunction = aws lambda get-function --function-name %s
LambdaAddPermission = aws lambda add-permission --function-name %s --principal s3.amazonaws.com --statement-id %s --action lambda:InvokeFunction --source-arn %s --source-account %s
LambdaGetPolicy = aws lambda get-policy --function-name %s
LambdaDeleteFunction = aws lambda delete-function --function-name %s
S3CreateBucket = aws s3 mb s3://%s
S3GetBucket = aws s3 ls s3://%s
S3Notification = aws s3api put-bucket-notification-configuration --bucket %s --notification-configuration %s
S3NotificationConfig = "{\\"LambdaFunctionConfigurations\\": [{\\"LambdaFunctionArn\\": \\"arn:aws:lambda:ap-northeast-1:%s:function:%s\\", \\"Events\\": [\\"s3:ObjectCreated:*\\"]}]}"
S3GetNotification = aws s3api get-bucket-notification-configuration --bucket %s
S3DeleteBucket = aws s3 rb s3://%s --force
GlueCreateJob = aws glue create-job --cli-input-json file://%s
GlueCreateDB = aws glue create-database --database-input %s
GlueCreateDBConfig = "{\\"Name\\":\\"%s\\"}"
GlueCreateCrawler = aws glue create-crawler --name %s --role %s --database-name %s --targets file://%s
GlueGetJob = aws glue get-job --job-name %s
GlueGetDB = aws glue get-database --name %s
GlueGetCrawler = aws glue get-crawler --name %s
GlueDeleteJob = aws glue delete-job --job-name %s
GlueDeleteDB = aws glue delete-database --name %s
GlueDeleteCrawler = aws glue delete-crawler --name %s

[heartbeat]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__

[auth]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__

[fortune]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__

[environment]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__

[environment/list]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__

[environment/lambda]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__
LambdaUploadRole    = arn:aws:iam::401978756792:role/prod-dev-lambda-test-role
LambdaUploadHandler = lambda_machine_learning.lambda_handler
LambdaUploadCode    = "S3Bucket=gcs-datalake-test,S3Key=src/machine_learning.zip"
LambdaUploadTimeout = 30
LambdaMachineLearningRole    = arn:aws:iam::401978756792:role/prod-dev-lambda-test-role
LambdaMachineLearningHandler = lambda_machine_learning.lambda_handler
LambdaMachineLearningCode    = "S3Bucket=gcs-datalake-test,S3Key=src/machine_learning.zip"
LambdaMachineLearningTimeout = 30

[environment/s3]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__

[environment/glue]
Module   = 
Encoding = SJIS
Work     = /web/cgi-work/__SESSION_ID__
GlueMachineLearningResource = /web/cgi-bin/resource/glue/machine_learning.json
GlueMachineLearningRole = gcs-crawler-test-role
GlueMachineLearningScriptLocation = s3://gcs-glue-job-test/auto/glue_auto_test.py
GlueMachineLearningExtraFiles = s3://gcs-datalake-test/src/lib.zip
GlueMachineLearningTempDir = s3://gcs-glue-job-test/temp
GlueCrawlerResource = /web/cgi-bin/resource/glue/clawler_target.json
GlueCrawlerRole = gcs-crawler-test-role
